<section class="pt-16  relative bg-center home-banner">
    <div id="carousel" class="relative w-full   h-[calc(100vh-4rem)] overflow-hidden ">
        <!-- 轨道：首尾克隆实现无缝 -->
        <div id="track" class="track h-full">
            <div class="slide h-full bg-[url('./assets/image/home/home_banner_3.jpg')]">
            </div>
            <div class="slide h-full bg-[url('./assets/image/home/home_banner_1.jpg')]">

            </div>
            <div class="slide h-full bg-[url('./assets/image/home/home_banner_2.jpg')]">
            </div>
            <div class="slide h-full bg-[url('./assets/image/home/home_banner_3.jpg')]">

            </div>
            <div class="slide h-full bg-[url('./assets/image/home/home_banner_1.jpg')]">

            </div>
        </div>
        <!-- 左右按钮：PC 显示 / 手机隐藏 -->
        <button id="prev"
                class="flex absolute top-1/2 left-4 -translate-y-1/2 bg-black/30 text-white rounded-full px-3 py-2 text-2xl z-10">
            ‹
        </button>
        <button id="next"
                class="flex absolute top-1/2 right-4 -translate-y-1/2 bg-black/30 text-white rounded-full px-3 py-2 text-2xl z-10">
            ›
        </button>

        <!-- 金色小圆点：始终显示 -->
        <!-- 圆点行：独立绝对居中 -->
        <!-- 金色小圆点：始终显示 -->
        <div id="dots" class="absolute bottom-14 left-1/2 -translate-x-1/2 flex gap-2 z-10">
            <span data-index="0" class="dot w-3 h-3 rounded-full bg-[#E4AA3D] opacity-60 cursor-pointer"></span>
            <span data-index="1" class="dot w-3 h-3 rounded-full bg-[#E4AA3D] opacity-60 cursor-pointer"></span>
            <span data-index="2" class="dot w-3 h-3 rounded-full bg-[#E4AA3D] opacity-60 cursor-pointer"></span>
        </div>

        <!-- 箭头行：独立绝对居中 -->
        <!-- 闪烁向下箭头（外层定位，内层动画） -->
        <div class="absolute bottom-0 left-1/2 -translate-x-1/2 z-10">
            <button id="scrollHint"
                    class="animate-bounce text-white hover:text-gold transition-colors">

                <svg xmlns="http://www.w3.org/2000/svg"
                     class="w-7 h-7" fill="none" viewBox="0 0 24 24"
                     stroke="currentColor" stroke-width="2.5"
                     stroke-linecap="square" stroke-linejoin="miter">
                    <path d="M12 4v16m0 0l-7-7m7 7l7-7"/>
                </svg>
<!--                <svg xmlns="http://www.w3.org/2000/svg"-->
<!--                     class="w-7 h-7" fill="none" viewBox="0 0 24 24"-->
<!--                     stroke="currentColor" stroke-width="2.5"-->
<!--                     stroke-linecap="square" stroke-linejoin="miter">-->
<!--                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"/>-->
<!--                </svg>-->
            </button>
        </div>
    </div>



    <script>
        /* 点击箭头 → 平滑滚动到 section 底部 */
        document.getElementById('scrollHint').addEventListener('click', () => {
            const banner = document.querySelector('.home-banner');
            const offset = banner.offsetHeight - 64;          // 轮播高度
            window.scrollTo({ top: offset, behavior: 'smooth' });
        });
    </script>

</section>

<script>
    // document.addEventListener('DOMContentLoaded', () => {
    //     const DURATION = 1500 * 1000;        // 2 秒轮播
    //     const track = document.getElementById('track');
    //     const slides = track.children;
    //     const dots = document.querySelectorAll('.dot');
    //     const total = slides.length;
    //     const width = 100;
    //     let index = 1;                // 从真实第 1 张开始
    //
    //     /* 初始位置 */
    //     track.style.transform = `translateX(-${width}%)`;
    //
    //     /* 更新圆点高亮 */
    //     const updateDots = i => {
    //         if (!dots && !dots.length) {
    //             return;
    //         }
    //         dots.forEach((d, idx) =>
    //             d.classList.toggle('opacity-100', idx === (i - 1 + 3) % 3) ||
    //             d.classList.toggle('opacity-60', idx !== (i - 1 + 3) % 3)
    //         );
    //     };
    //     updateDots(index);
    //
    //     /* 下一张（无缝） */
    //     const next = () => {
    //
    //         index++;
    //         if (index === total - 1) {
    //             index = 1;
    //         }
    //         track.style.transition = 'transform .6s ease';
    //         track.style.transform = `translateX(-${index * width}%)`;
    //
    //         track.addEventListener('transitionend', function handler() {
    //             if (index === total - 1) {
    //                 track.style.transition = 'none';
    //                 index = 1;
    //                 track.style.transform = `translateX(-${width}%)`;
    //             }
    //             updateDots(index);
    //             track.removeEventListener('transitionend', handler);
    //         });
    //     };
    //
    //     /* 上一张（无缝） */
    //     const prev = () => {
    //         index--;
    //         if (index < 0) {
    //             index = total - 2
    //         }
    //         track.style.transition = 'transform .6s ease';
    //         track.style.transform = `translateX(-${index * width}%)`;
    //
    //         track.addEventListener('transitionend', function handler() {
    //             if (index === 0) {
    //                 track.style.transition = 'none';
    //                 index = total - 2;
    //                 track.style.transform = `translateX(-${index * width}%)`;
    //             }
    //             updateDots(index);
    //             track.removeEventListener('transitionend', handler);
    //         });
    //     };
    //
    //     /* 点击圆点/按钮 */
    //     dots.forEach(d => d.addEventListener('click', () => go(+d.dataset.index + 1)));
    //     document.getElementById('next').addEventListener('click', next);
    //     document.getElementById('prev').addEventListener('click', prev);
    //
    //     function go(i) {
    //         index = i;
    //         track.style.transition = 'transform .6s ease';
    //         track.style.transform = `translateX(-${index * width}%)`;
    //         updateDots(index);
    //     }
    //     /* 自动轮播 */
    //     function main() {
    //         let timer = setInterval(next, DURATION );
    //         const carousel = document.getElementById('carousel');
    //         carousel.addEventListener('mouseenter', () => {
    //             clearInterval(timer)
    //             timer = null;
    //         });
    //         carousel.addEventListener('mouseleave', () => {
    //             clearInterval(timer)
    //             timer = null;
    //             timer = setInterval(next, DURATION)
    //         });
    //     }
    //     main()
    //
    // })
</script>